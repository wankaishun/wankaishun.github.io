<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL优化</title>
      <link href="/2019/09/08/MySQL%E4%BC%98%E5%8C%96/"/>
      <url>/2019/09/08/MySQL%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL-优化"><a href="#MySQL-优化" class="headerlink" title="MySQL 优化"></a>MySQL 优化</h1><p>   前段时间公司内部做技术培训，轮到我需要讲MySQL的优化，基本上准备了一个周，看书看视频做了一个ppt。觉得里面有很多干货，<br>所以把ppt的内容整理到博客中。        </p><h2 id="数据类型的优化"><a href="#数据类型的优化" class="headerlink" title="数据类型的优化"></a>数据类型的优化</h2><h3 id="更小的更好"><a href="#更小的更好" class="headerlink" title="更小的更好"></a>更小的更好</h3><p>使用更小的数据更小的数据类型会更快,对于CPU,磁盘和内存,io时间的消耗更少.但是要注意不要超出使用范围,对于MySQL而言,增加数据范围是非常麻烦的.需要去更新这个表.</p><h3 id="简单就好"><a href="#简单就好" class="headerlink" title="简单就好"></a>简单就好</h3><p>简单数据类型的操作通常需要更少的CPU周期。例如，整型比字符操作代价更低，因为字符集和校队规则（排序规则）使字符比较比整型比较更复杂。这里有两个例子：一个是应该使用MySQL内建的类型而不是字符串来存储日期和时间，另外一个是应该用整型存储IP地址。</p><h3 id="尽量避免使用NULL"><a href="#尽量避免使用NULL" class="headerlink" title="尽量避免使用NULL"></a>尽量避免使用NULL</h3><p>这一点是针对索引的,如果一个字段会使用索引,那么使用NULL后MySQL,引擎会更难优化.<br>当然也有例外对于使用innoDB引擎而言,使用单独的位(bit)来处理NULL,所以对于不需要建立索引的稀疏数据(大多数数据都是NULL)可以节约更多的磁盘空间</p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><img src="/2019/09/08/MySQL优化/09/08/MySQL优化/图片1.png" title="This is an example image">]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
